---
import type {InferGetStaticPropsType, GetStaticPaths} from "astro";
import BlogPost from "@/layouts/BlogPost";
import {
    filterByLanguage,
    getAllPosts,
    getSlugFromCollectionEntry,
} from "@/utils";
import {getSupportedLanguages, type SupportedLanguage} from "src/utils/i18n";
import type {CollectionEntry} from "astro:content";

export const prerender = true;
export const getStaticPaths = (async () => {
    const blogEntries = await getAllPosts();
    return getSupportedLanguages().flatMap((lang) => {
        const filteredByLanguage = filterByLanguage(
            blogEntries,
            lang as SupportedLanguage,
        );

        return filteredByLanguage.map((post) => {
            const slug = getSlugFromCollectionEntry(
                post as CollectionEntry<"entries">,
            );
            return {
                params: {lang, slug},
                props: {post},
            };
        });
    });
}) satisfies GetStaticPaths;
export type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const {post} = Astro.props;
const {Content} = await post.render();
---

<BlogPost post={post as CollectionEntry<"entries">}>
    <Content/>
</BlogPost>
